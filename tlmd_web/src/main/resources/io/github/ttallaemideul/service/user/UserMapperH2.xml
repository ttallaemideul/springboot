<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.ttallaemideul.service.user.UserMapperH2">

	<resultMap id="userDetailMap" type="io.github.ttallaemideul.service.user.UserDetailDto">
		<id property="user_id" column="user_id"/>
		<association property="user" column="user_id" javaType="io.github.ttallaemideul.service.user.UserDto" resultMap="userMap"/>
		<collection property="roles" column="role_id" ofType="io.github.ttallaemideul.service.user.UserRoleDto" resultMap="userRoleMap"/>
	</resultMap>
	
	<resultMap id="userMap" type="io.github.ttallaemideul.service.user.UserDto">
		<id property="id" column="user_id"/>
		<result property="active_yn" column="active_yn"/>
		<result property="expired_yn" column="expired_yn"/>
		<result property="locked_yn" column="locked_yn"/>
		<result property="pwd_expired_yn" column="pwd_expired_yn"/>
		<result property="login_id" column="login_id"/>
		<result property="user_name" column="user_name"/>
		<result property="pwd" column="pwd"/>
		<result property="reg_dt" column="reg_dt"/>
		<result property="upd_dt" column="upd_dt"/>
	</resultMap>
	
	<resultMap id="userRoleMap" type="io.github.ttallaemideul.service.user.UserRoleDto">
		<id property="id" column="role_id"/>
		<result property="role" column="role"/>
		<result property="desc" column="role_desc"/>
		<result property="priority" column="priority"/>
	</resultMap>
	
	<select id="getUserListCount" resultType="int">
		select 
			count(1)
		from user u
		where 1=1
			<if test="@tlmd.Util@isNotEmpty( user_id )">and u.user_id=#{user_id}</if>
			<if test="@tlmd.Util@isNotEmpty( login_id )">and u.login_id=#{login_id}</if>
			<if test="@tlmd.Util@isNotEmpty( role_id )">and u.role_id=#{role_id}</if>
	</select>
	
	<select id="getUserList" resultMap="userDetailMap">
	select
		u.user_id
		, u.active_yn
		, u.expired_yn
		, u.locked_yn
		, u.pwd_expired_yn
  		, u.login_id
		, u.user_name
		/* , u.pwd */
		, u.reg_dt
		, u.upd_dt
		, urm.role_id
		, urm.role
		, urm.role_desc
		, urm.priority
	from user u join user_role ur using(user_id) join user_role_mng urm on ur.role_id=urm.role_id
	where 1=1
		<if test="@tlmd.Util@isNotEmpty( user_id )">and u.user_id=#{user_id}</if>
		<if test="@tlmd.Util@isNotEmpty( login_id )">and u.login_id=#{login_id}</if>
		<if test="@tlmd.Util@isNotEmpty( role_id )">and u.role_id=#{role_id}</if>
	order by u.reg_dt desc, urm.priority
	limit ${limit} offset ${offset}
	</select>
	
	<insert id="insertUserDto" useGeneratedKeys="true" keyProperty="id" keyColumn="user_id"  parameterType="io.github.ttallaemideul.service.user.UserDto">
		insert into user (
			active_yn
			, login_id
			, user_name
			, pwd
		) values
		(
			#{active_yn}
			, #{login_id}
			, #{user_name}
			, #{pwd}
		)
	</insert>
	
	<insert id="insertUserRoleDto">
		insert into user_role (user_id, role_id) values
		(#{user_id}
		, (select role_id from user_role_mng where role=#{role})
		)
	</insert>
	
</mapper>